1. O que é um repositório no Git e qual a sua importância?
Repositório no Git é onde ficam os arquivos e o histórico de alterações de um projeto. 
Ele é importante para versionamento e colaboração.

2. Qual a função do Git Bash?
O Git Bash é uma interface de linhas de comando para interagir com o Git em seu Sistema Operacional

3. O que faz o comando git add e qual a diferença entre git add <arquivo> e git add .?
git add prepara arquivos para commit. git add <arquivo> adiciona arquivos específicos, 
enquanto git add . adiciona todos os arquivos modificados.

4. Por que utilizamos o ponto (.) no comando git add .?
Para adicionar todos os arquivos modificados no diretorio atual

5. Explique o comando git commit e por que é importante criar uma mensagem descritiva.
O comando git commoit ele serve para relatarmos as mudanças feitas durante o projeto como uma timeline do projeto

6. Qual a função do comando git push?
Para podermos enviar as alterações feitas em um repertorio local para um repositório remoto

7. Qual a importância de criar commits frequentes durante o desenvolvimento de um projeto?
para sabermos quais alterações feitas 

8. Explique a função das tags HTML e como elas estruturam uma página.
As tags HTML são elementos que estruturam e definem o conteúdo de uma página web, como os textos, imagens ou links. Elas permitem que o navegador interprete e exiba corretamenre o cinteúdo, organizando-o em diferentes seções e estilos

9. O que são atributos em uma tag HTML e qual a sua função?
São pares de nome e valor que fornecem informações adicionais sobre o elemento, como id, class e src. Eles definem caracteristicas e comportamentos dos elementos, permitindo personalizar a aparencia e a funcionalidade  

10. O que é o Emmet e como ele facilita o desenvolvimento de páginas HTML?
O Emmet é uma ferramenta que acelera a escrita de HTML e CSS com atalhos inteligentes. Ele transforma abreviações em código completo automaticamente. Isso economiza tempo e torna o desenvolvimento mais ágil.


11. O que é o box-sizing no CSS e por que usamos ele no reset inicial?
O box-sizing define como a largura e altura de um elemento são calculadas no CSS. Usamos border-box no reset para incluir padding e borda dentro do tamanho total. Isso evita cálculos complicados e mantém o layout mais previsível.

12. Por que é importante utilizar tags semânticas no HTML?
Tags semânticas dão significado ao conteúdo do HTML, como <header>, <article> e <footer>. Isso melhora a acessibilidade e o SEO, facilitando a leitura para navegadores e motores de busca. Além disso, torna o código mais organizado.


13. O que são media queries no CSS e qual a sua função?
Media queries permitem adaptar o layout de um site a diferentes tamanhos de tela. Com elas, podemos criar designs responsivos que funcionam bem em celulares, tablets e desktops. São essenciais para uma boa experiência do usuário.


14. Qual a função do GitHub Pages?
O GitHub Pages permite hospedar sites estáticos diretamente do GitHub. Ele é gratuito e fácil de configurar, ideal para projetos, portfólios e documentações. Basta fazer o push dos arquivos para um repositório e ativar o Pages.

15. O que é o Flexbox no CSS e para que ele é utilizado?
O Flexbox é um sistema de layout no CSS que facilita o alinhamento de elementos. Ele permite distribuir espaço automaticamente e ajustar itens de forma flexível. É muito útil para criar interfaces responsivas e organizadas.

16. Qual a diferença entre justify-content e align-items em um container Flexbox?
justify-content alinha os itens no eixo principal (horizontal ou vertical). align-items alinha no eixo perpendicular. Por exemplo, se flex-direction for row, justify-content alinha na horizontal e align-items na vertical.

17. Como o flex-grow funciona e qual o seu propósito no layout Flexbox?
flex-grow define a capacidade de um item Flexbox crescer dentro do container. Um valor maior faz o item ocupar mais espaço disponível. Isso ajuda a criar layouts dinâmicos e adaptáveis sem precisar definir larguras fixas.

18. Explique a diferença entre flex-direction: column; e flex-direction: row;.
flex-direction: column; organiza os itens de cima para baixo (verticalmente). flex-direction: row; organiza da esquerda para a direita (horizontalmente). Isso afeta como os itens são distribuídos dentro do container flexível.